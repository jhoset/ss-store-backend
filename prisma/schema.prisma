// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

//******************************************************************************************
//*                ROLE-BASED ACCESS CONTROL (RBAC) PATTERN
//******************************************************************************************

model User {
  id            Int              @id @default(autoincrement())
  firstName     String           @db.VarChar(50)
  middleName    String?          @db.VarChar(50)
  lastName      String           @db.VarChar(50)
  userName      String           @db.VarChar(55)
  email         String           @db.VarChar(100)
  verifiedEmail Boolean          @default(false)
  password      String           @db.VarChar(60)
  roles         UserRoleDetail[]

  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  changedBy  String   @db.VarChar(55)
  changeType String   @db.VarChar(1)
}

model UserRoleDetail {
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @relation(fields: [roleId], references: [id])
  roleId Int

  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  changedBy  String   @db.VarChar(55)
  changeType String   @db.VarChar(1)

  @@id([userId, roleId])
}

model Role {
  id          Int                    @id @default(autoincrement())
  name        String                 @db.VarChar(80)
  users       UserRoleDetail[]
  permissions RolePermissionDetail[]

  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  changedBy  String   @db.VarChar(55)
  changeType String   @db.VarChar(1)
}

model RolePermissionDetail {
  role         Role       @relation(fields: [roleId], references: [id])
  roleId       Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int

  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  changedBy  String   @db.VarChar(55)
  changeType String   @db.VarChar(1)

  @@id([roleId, permissionId])
}

model Permission {
  id    Int                    @id @default(autoincrement())
  name  String                 @db.VarChar(80)
  roles RolePermissionDetail[]

  isDeleted  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  changedBy  String   @db.VarChar(55)
  changeType String   @db.VarChar(1)
}
